/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Business.Course;
import Business.Employer;
import Business.Student;
import Business.StudentDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ayush
 */
public class EmployerJPanel extends javax.swing.JPanel {
    private StudentDirectory studentDirectory;
    private JPanel workArea;
    private Employer employer;

    /**
     * Creates new form EmployerJPanel
     */
    public EmployerJPanel(StudentDirectory studentDirectory, JPanel workArea, Employer employer) {
        initComponents();
        this.studentDirectory = studentDirectory;
        this.workArea = workArea;
        this.employer = employer;
         populateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEmployerPanelTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewStudents = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtFeedback = new javax.swing.JTextArea();
        txtName = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        txtGraduated = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnFeedback = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        lblEmployerPanelTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblEmployerPanelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmployerPanelTitle.setText("Hello Employer");

        tblViewStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student ID", "Student Name", "Student Contact", "Student Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewStudents);

        jLabel1.setText("Student Name:");

        jLabel2.setText("Student Contact:");

        jLabel3.setText("Student Email:");

        jLabel4.setText("Student Graduated?");

        jLabel5.setText("Feedback:");

        txtFeedback.setColumns(20);
        txtFeedback.setRows(5);
        jScrollPane2.setViewportView(txtFeedback);

        btnFeedback.setText("Give Feedback");
        btnFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFeedbackActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEmployerPanelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                    .addComponent(txtName)
                                    .addComponent(txtContact)
                                    .addComponent(txtEmail)
                                    .addComponent(txtGraduated))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnFeedback)
                                    .addComponent(btnView))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnFeedback)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmployerPanelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnView))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtGraduated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        int selectedRow = tblViewStudents.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from table first to view details", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tblViewStudents.getModel();
            String studentID = (String) model.getValueAt(selectedRow, 0);
            String studentName = (String) model.getValueAt(selectedRow, 1);
            String studentContact = (String) model.getValueAt(selectedRow, 2);
            String studentEmail = (String) model.getValueAt(selectedRow, 3);
            
            boolean isGraduated = false;
            for(Student student : studentDirectory.getStudentDirectory()) {
                if(studentID == student.getStudentID()) {
                   isGraduated = student.isDegreegranted();
                }
            }
//            Student student = studentDirectory.;
//            courseID = course.getCourseID();

            txtName.setText(studentName);
            txtContact.setText(studentContact);
            txtEmail.setText(studentEmail);
            if(isGraduated == true) {
                 txtGraduated.setText("Yes");
            } else {
                txtGraduated.setText("No");
            }
           
            
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFeedbackActionPerformed
        int selectedRow = tblViewStudents.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblViewStudents.getModel();
        String studentID = (String) model.getValueAt(selectedRow, 0);
        String feedback = txtFeedback.getText();
        
        for(Student student : studentDirectory.getStudentDirectory()) {
                if(studentID == student.getStudentID()) {
                   student.setFeedback(feedback);
                   System.out.println(student.getStudentName());
                   JOptionPane.showMessageDialog(null,"Feedback Successful!");
                } else {
                    System.out.println("Some error");
                }
            }

    }//GEN-LAST:event_btnFeedbackActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFeedback;
    private javax.swing.JButton btnView;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblEmployerPanelTitle;
    private javax.swing.JTable tblViewStudents;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextArea txtFeedback;
    private javax.swing.JTextField txtGraduated;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
    
    private void populateTable() {
    DefaultTableModel dtm = (DefaultTableModel) tblViewStudents.getModel();
    dtm.setRowCount(0);
    String employerName = employer.getEmployerName(); // Get the employer's name
    for (Student student : studentDirectory.getStudentDirectory()) {
        String studentOrganization = student.getEmployerOrganization();
        if (studentOrganization != null && studentOrganization.equals(employerName)) { // Check for null and equality
            Object[] row = new Object[4];
            row[0] = student.getStudentID();
            row[1] = student.getStudentName();
            row[2] = student.getStudentPhoneNumber();
            row[3] = student.getStudentEmailID();
            dtm.addRow(row); // Add the row to the table
        }
    }
}






//    private void populateTable() {
//       DefaultTableModel dtm = (DefaultTableModel) tblViewStudents.getModel();
//        dtm.setRowCount(0);
//        String employerName = employer.getEmployerName();
//        for (Student student : studentDirectory.getStudentDirectory()) {
//        if (student.getEmployerOrganization().equals(employerName)) {
//            Object[] row = new Object[4];
//            row[0] = student.getStudentID();
//            row[1] = student.getStudentName();
//            row[2] = student.getStudentPhoneNumber();
//            row[3] = student.getStudentEmailID();
//            dtm.addRow(row); 
//        }
//    }
////        for(Student student : studentDirectory.getStudentDirectory()) {
////            
////                
////                    Object[] row = new Object[4];
////                    row[0] = student.getStudentID();
////                    row[1] = student.getStudentName();
////                    row[2] = student.getStudentPhoneNumber();
////                    row[3] = student.getStudentEmailID();
////
////        }
//    }
}
