/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Business.Course;
import Business.CoursesDirectory;
import Business.Professor;
import Business.Student;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aayush
 */


public class StudentSelectCourseJPanel extends javax.swing.JPanel {
      private JPanel workArea;
      private CoursesDirectory coursesDirectory;
      private Student student;

    /**
     * Creates new form StudentSelectCourseJPanel
     */
    StudentSelectCourseJPanel(JPanel workArea ,CoursesDirectory coursesDirectory, Student student) {
        initComponents();
        this.workArea = workArea;
        this.coursesDirectory =  coursesDirectory;
        this.student = student;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCourseSelection = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourseSelection = new javax.swing.JTable();
        btnBackStudentCourseSelection = new javax.swing.JButton();
        btnFilter = new javax.swing.JButton();
        btnViewSelectCourses = new javax.swing.JButton();
        lblCourseName = new javax.swing.JLabel();
        txtCourseNameSelectCourses = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaDescriptionSelectCourses = new javax.swing.JTextArea();
        lblProfessor = new javax.swing.JLabel();
        txtProfessorSelectCourses = new javax.swing.JTextField();
        lblRegion = new javax.swing.JLabel();
        txtRegionSelectCourses = new javax.swing.JTextField();
        txtLanguageSelectCourses = new javax.swing.JTextField();
        lblLanguage = new javax.swing.JLabel();
        lblSemester = new javax.swing.JLabel();
        radioFallSelectCourses = new javax.swing.JRadioButton();
        radioSpringSelectCourses = new javax.swing.JRadioButton();
        btnRegisterCourse = new javax.swing.JButton();
        dropDownSelectionFilter = new javax.swing.JComboBox<>();
        lblFilterBy = new javax.swing.JLabel();
        txtFilterInput = new javax.swing.JTextField();
        lblRatingSelectCourses = new javax.swing.JLabel();
        txtRatingSelectCourse = new javax.swing.JTextField();

        lblCourseSelection.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblCourseSelection.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCourseSelection.setText("Course Selection");

        tblCourseSelection.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Description", "Professor", "Region", "Semester", "Language", "Rating"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCourseSelection);

        btnBackStudentCourseSelection.setText("<<Back");
        btnBackStudentCourseSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackStudentCourseSelectionActionPerformed(evt);
            }
        });

        btnFilter.setText("Search");
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        btnViewSelectCourses.setText("View");
        btnViewSelectCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSelectCoursesActionPerformed(evt);
            }
        });

        lblCourseName.setText("Course Name");

        lblDescription.setText("Description");

        txtAreaDescriptionSelectCourses.setColumns(20);
        txtAreaDescriptionSelectCourses.setRows(5);
        jScrollPane2.setViewportView(txtAreaDescriptionSelectCourses);

        lblProfessor.setText("Professor");

        lblRegion.setText("Region");

        lblLanguage.setText("Language");

        lblSemester.setText("Semester");

        radioFallSelectCourses.setText("Fall");

        radioSpringSelectCourses.setText("Spring");

        btnRegisterCourse.setText("Register");
        btnRegisterCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterCourseActionPerformed(evt);
            }
        });

        dropDownSelectionFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Course Name", "Language", "Region", "Professor Name" }));
        dropDownSelectionFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownSelectionFilterActionPerformed(evt);
            }
        });

        lblFilterBy.setText("Filter By");

        lblRatingSelectCourses.setText("Rating");

        txtRatingSelectCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRatingSelectCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnBackStudentCourseSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCourseSelection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLanguage)
                            .addComponent(lblRegion)
                            .addComponent(lblProfessor)
                            .addComponent(lblSemester)
                            .addComponent(lblRatingSelectCourses))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtLanguageSelectCourses)
                    .addComponent(txtRegionSelectCourses)
                    .addComponent(txtCourseNameSelectCourses)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioFallSelectCourses)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radioSpringSelectCourses))
                    .addComponent(txtRatingSelectCourse)
                    .addComponent(txtProfessorSelectCourses)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txtFilterInput, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnFilter))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFilterBy, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dropDownSelectionFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnViewSelectCourses, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRegisterCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCourseSelection)
                    .addComponent(btnBackStudentCourseSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCourseNameSelectCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFilterBy, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dropDownSelectionFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnViewSelectCourses)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescription)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFilterInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFilter)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProfessor)
                    .addComponent(txtProfessorSelectCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegion)
                    .addComponent(txtRegionSelectCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLanguage)
                    .addComponent(txtLanguageSelectCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSemester)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radioSpringSelectCourses)
                        .addComponent(radioFallSelectCourses)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRatingSelectCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRatingSelectCourses)
                    .addComponent(btnRegisterCourse))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackStudentCourseSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackStudentCourseSelectionActionPerformed
        // TODO add your handling code here:
         workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
        populateTable();
    }//GEN-LAST:event_btnBackStudentCourseSelectionActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        // TODO add your handling code here:
        String filterBySelection = dropDownSelectionFilter.getSelectedItem().toString();

        Course course;
        if(filterBySelection =="Course Name"){
             course = coursesDirectory.searchCourseByCourseName(txtFilterInput.getText());
        } else if(filterBySelection =="Language"){
             course = coursesDirectory.searchCourseByLanguage(txtFilterInput.getText());
        } else if(filterBySelection =="Region"){
             course = coursesDirectory.searchCourseByRegion(txtFilterInput.getText());
        } else{
             course = coursesDirectory.searchCourseByProfessorName(txtFilterInput.getText());
        }
        
        
         if(course == null) {
            JOptionPane.showMessageDialog(null, "Give some inout in the text field", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {
             DefaultTableModel model = (DefaultTableModel) tblCourseSelection.getModel();
             model.setRowCount(0);
             
             Object[] rowData = {
                 course.getCourseName(),
                 course.getDescription(),
                 course.getProfessor().toString(),
                 course.getRegion(),
                 course.getTerm(),
                 course.getLanguage(),
                 course.getRating()
                 
             };
             model.addRow(rowData);
         }


    }//GEN-LAST:event_btnFilterActionPerformed

    private void btnViewSelectCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSelectCoursesActionPerformed
        // TODO add your handling code here:

            int selectedRow = tblCourseSelection.getSelectedRow();
            if(selectedRow < 0){
                JOptionPane.showMessageDialog(null,"Please select a row from table first to view details", "Warning",JOptionPane.WARNING_MESSAGE);
            } else {
                DefaultTableModel model = (DefaultTableModel) tblCourseSelection.getModel();
//                Professor professor = (Professor) model.getValueAt(selectedRow, 2);
 
                
            String courseID = (String) model.getValueAt(selectedRow, 0);
            String courseName = (String) model.getValueAt(selectedRow, 1);
            String description = (String) model.getValueAt(selectedRow, 2);
            String professor = (String) model.getValueAt(selectedRow,3);
            // bug in the view flow for student
//            String professorName = professor.getProfessorName();
            String region = (String) model.getValueAt(selectedRow, 4);
           
            String term = (String) model.getValueAt(selectedRow, 5);
            String language = (String) model.getValueAt(selectedRow, 6);
            Double rating = (Double) model.getValueAt(selectedRow, 7);
            
            txtCourseNameSelectCourses.setText(courseName);
            txtAreaDescriptionSelectCourses.setText(description);
            txtRegionSelectCourses.setText(region);
            txtLanguageSelectCourses.setText(language);
            txtProfessorSelectCourses.setText(professor);
            txtRatingSelectCourse.setText(rating.toString());
            
                 if(term == "Fall") {
                radioFallSelectCourses.setSelected(true);
                radioSpringSelectCourses.setSelected(false);
            } else {
                radioFallSelectCourses.setSelected(false);
                radioSpringSelectCourses.setSelected(true);
            }
            }
    }//GEN-LAST:event_btnViewSelectCoursesActionPerformed

    private void txtRatingSelectCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRatingSelectCourseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRatingSelectCourseActionPerformed

    private void dropDownSelectionFilterActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    private void btnRegisterCourseActionPerformed(java.awt.event.ActionEvent evt) {
        int selectedRow = tblCourseSelection.getSelectedRow();
        
        DefaultTableModel model = (DefaultTableModel) tblCourseSelection.getModel();
            String courseID = (String) model.getValueAt(selectedRow, 0);
            String courseName = (String) model.getValueAt(selectedRow, 1);
            String description = (String) model.getValueAt(selectedRow, 2);
            Professor professor = null;
            for(Course course : coursesDirectory.getCourseDirectory()) {
                if(courseID == course.getCourseID()) {
                    professor = course.getProfessor();
                }
            }
            String professorName = (String) model.getValueAt(selectedRow, 3);
            String region = (String) model.getValueAt(selectedRow, 4);
           
            String term = (String) model.getValueAt(selectedRow, 5);
            String language = (String) model.getValueAt(selectedRow, 6);
            Double rating = (Double) model.getValueAt(selectedRow, 7);

        Course course = new Course();
        course.setCourseID(courseID);
        course.setCourseName(courseName);
        course.setDescription(description);
        course.setProfessor(professor);
        course.setRegion(region);
        course.setLanguage(language);
        course.setTerm(term);
        course.setRating(rating);
        student.addCourse(course);
        JOptionPane.showMessageDialog(null, "Course Registration Successful!");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackStudentCourseSelection;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnRegisterCourse;
    private javax.swing.JButton btnViewSelectCourses;
    private javax.swing.JComboBox<String> dropDownSelectionFilter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCourseName;
    private javax.swing.JLabel lblCourseSelection;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblFilterBy;
    private javax.swing.JLabel lblLanguage;
    private javax.swing.JLabel lblProfessor;
    private javax.swing.JLabel lblRatingSelectCourses;
    private javax.swing.JLabel lblRegion;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JRadioButton radioFallSelectCourses;
    private javax.swing.JRadioButton radioSpringSelectCourses;
    private javax.swing.JTable tblCourseSelection;
    private javax.swing.JTextArea txtAreaDescriptionSelectCourses;
    private javax.swing.JTextField txtCourseNameSelectCourses;
    private javax.swing.JTextField txtFilterInput;
    private javax.swing.JTextField txtLanguageSelectCourses;
    private javax.swing.JTextField txtProfessorSelectCourses;
    private javax.swing.JTextField txtRatingSelectCourse;
    private javax.swing.JTextField txtRegionSelectCourses;
    // End of variables declaration//GEN-END:variables
    
    private void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblCourseSelection.getModel();
        dtm.setRowCount(0);
        for (Course course : coursesDirectory.getCourseDirectory()){
            Object[] row = new Object[8];
            row[0] = course.getCourseID();
            row[1] = course.getCourseName();
            row[2] = course.getDescription();
            row[3] = course.getProfessor().getProfessorName();
            row[4] = course.getRegion();
            row[5] = course.getTerm();
            row[6] = course.getLanguage();
            row[7] = course.getRating();
            
            dtm.addRow(row);
            
        }
    }
}
