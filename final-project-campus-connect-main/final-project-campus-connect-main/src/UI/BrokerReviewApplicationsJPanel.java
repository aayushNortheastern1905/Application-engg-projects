/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Business.Broker;
import Business.InterestedCustomer;
import Business.InterestedCustomerDirectory;
import Business.Property;
import Business.PropertyDirectory;
import java.awt.CardLayout;
import java.lang.reflect.Array;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class BrokerReviewApplicationsJPanel extends javax.swing.JPanel {
    private JPanel workArea;
    private PropertyDirectory propertyDirectory;
    private Broker broker;
    private Property selectedProperty;
    private PropertyDirectory propertyBrokerDirectory;
    private ArrayList<String> propertyId;

    /**
     * Creates new form BrokerReviewApplicationsJPanel
     */
    public BrokerReviewApplicationsJPanel(JPanel workArea, PropertyDirectory propertyDirectory, Broker broker) {
        initComponents();
        this.workArea = workArea;
        this.propertyDirectory = propertyDirectory;
        this.broker = broker;
        this.propertyId = new ArrayList<String>();
        populatePropertyTable();
    }
    
    public void populatePropertyTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblProperties.getModel();
        dtm.setRowCount(0);
        for(Property property: propertyDirectory.getPropertyDirectory()){
            if(broker.getBrokerName().equals(property.getBroker().getBrokerName()) && !property.isIsTaken() && !property.getInterestedCustomerDirectory().getInterestedCustomerDirectory().isEmpty()) {
                Object[] row = new Object[5];
                propertyId.add(property.getPropertyId());
            row[0] = property.getPropertyId();
            row[1] = property.getName();
            row[2] = property.getAddress();
            row[3] = property.getUniversity().getUniversityName();
            row[4] = property.getPincode();
            
            dtm.addRow(row);
            } 
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProperties = new javax.swing.JTable();
        btnViewApplicants = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblApplicants = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtfeedback = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        btnSend = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(223, 223, 223));

        jLabel1.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Review Applications");

        tblProperties.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        tblProperties.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Property ID", "Property Name", "Property Address", "University", "Pincode"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProperties);

        btnViewApplicants.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        btnViewApplicants.setText("View Applicants");
        btnViewApplicants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewApplicantsActionPerformed(evt);
            }
        });

        tblApplicants.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        tblApplicants.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Phone Number", "Roommates", "Budget"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblApplicants);

        jLabel2.setFont(new java.awt.Font("MS UI Gothic", 1, 14)); // NOI18N
        jLabel2.setText("Applicants:");

        txtfeedback.setColumns(20);
        txtfeedback.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        txtfeedback.setRows(5);
        jScrollPane3.setViewportView(txtfeedback);

        jLabel3.setFont(new java.awt.Font("MS UI Gothic", 1, 14)); // NOI18N
        jLabel3.setText("Feedback:");

        btnSend.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnViewApplicants))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(btnViewApplicants, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSend, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewApplicantsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewApplicantsActionPerformed
    int selectedRow = tblProperties.getSelectedRow();
    if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from table first to view details", "Warning",JOptionPane.WARNING_MESSAGE);
        }
    else {
//        PropertyDirectory filteredProps = new ProductDirectory
        
//        selectedProperty = propertyDirectory.getPropertyDirectory().get(selectedRow );
        
        
        String selectedPropertyId = propertyId.get(selectedRow);
        System.out.println(selectedPropertyId);
        
        selectedProperty = propertyDirectory.searchPropertyById(selectedPropertyId);
        
        
//        for(int i=0; i<selectedProperty.getInterestedCustomerDirectory().getInterestedCustomerDirectory().size(); i++) {
//            System.out.println(selectedProperty.getInterestedCustomerDirectory().getInterestedCustomerDirectory().get(i).getInterestedCustomerName());
//        }
        populateApplicantsTable(selectedProperty.getInterestedCustomerDirectory());
    }

    }//GEN-LAST:event_btnViewApplicantsActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed

        int selectedRow = tblApplicants.getSelectedRow();
        if(selectedRow<0) {
            JOptionPane.showMessageDialog(null,"Please select a row from table first to view details", "Warning",JOptionPane.WARNING_MESSAGE);
        } else {
            InterestedCustomer ic = selectedProperty.getInterestedCustomerDirectory().getInterestedCustomerDirectory().get(selectedRow);
            System.out.println(ic.getInterestedCustomerName());
            ic.setFeedback(txtfeedback.getText());
            JOptionPane.showMessageDialog(null,"Feedback sent successfully!");
            txtfeedback.setText("");
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_jButton1ActionPerformed
     public void populateApplicantsTable(InterestedCustomerDirectory interestedCustomerDirectory) {
         DefaultTableModel dtm = (DefaultTableModel) tblApplicants.getModel();
         dtm.setRowCount(0);        
         for(InterestedCustomer ic: interestedCustomerDirectory.getInterestedCustomerDirectory()){
                Object[] row = new Object[4];
            row[0] = ic.getInterestedCustomerName();
            row[1] = ic.getInterestedCustomerPhoneNumber();
            row[2] = ic.getNumberOfRoomates();
            row[3] = ic.getDepositAmount();
            
            dtm.addRow(row);
    }
     }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnViewApplicants;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblApplicants;
    private javax.swing.JTable tblProperties;
    private javax.swing.JTextArea txtfeedback;
    // End of variables declaration//GEN-END:variables
}
